{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"layout-topbar\"\n};\nvar _hoisted_2 = {\n  class: \"layout-topbar-left\"\n};\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-bars\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_4 = [_hoisted_3];\nvar _hoisted_5 = {\n  href: \"#\",\n  class: \"logo\"\n};\nvar _hoisted_6 = [\"src\"];\nvar _hoisted_7 = {\n  href: \"#\"\n};\nvar _hoisted_8 = [\"src\"];\nvar _hoisted_9 = {\n  class: \"layout-topbar-right\"\n};\nvar _hoisted_10 = {\n  class: \"layout-topbar-right-items\"\n};\nvar _hoisted_11 = {\n  class: \"fadeInDown\"\n};\nvar _hoisted_12 = {\n  role: \"menuitem\"\n};\nvar _hoisted_13 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-fw pi-user\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_14 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Profile\", -1 /* HOISTED */);\nvar _hoisted_15 = [_hoisted_13, _hoisted_14];\nvar _hoisted_16 = {\n  role: \"menuitem\"\n};\nvar _hoisted_17 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-fw pi-sign-out\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Logout\", -1 /* HOISTED */);\nvar _hoisted_19 = [_hoisted_17, _hoisted_18];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_AppMenu = _resolveComponent(\"AppMenu\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"topbar-menu-button\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onMenuButtonClick($event);\n    })\n  }, _hoisted_4), _createElementVNode(\"a\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: 'layout/images/logo-' + ($props.colorScheme === 'light' ? 'dark' : 'light') + '.svg'\n  }, null, 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"a\", _hoisted_7, [_createElementVNode(\"img\", {\n    src: 'layout/images/appname-' + ($props.colorScheme === 'light' ? 'dark' : 'light') + '.svg',\n    class: \"app-name\"\n  }, null, 8 /* PROPS */, _hoisted_8)])]), _createVNode(_component_AppMenu, {\n    model: $props.items,\n    menuMode: $props.menuMode,\n    colorScheme: $props.colorScheme,\n    menuActive: $props.menuActive,\n    activeInlineProfile: $props.activeInlineProfile,\n    onSidebarMouseOver: $options.onSidebarMouseOver,\n    onSidebarMouseLeave: $options.onSidebarMouseLeave,\n    onToggleMenu: $options.onToggleMenu,\n    onChangeInlinemenu: $options.onChangeActiveInlineMenu,\n    onMenuClick: $options.onMenuClick,\n    onRootMenuitemClick: $options.onRootMenuItemClick,\n    onMenuitemClick: $options.onMenuItemClick\n  }, null, 8 /* PROPS */, [\"model\", \"menuMode\", \"colorScheme\", \"menuActive\", \"activeInlineProfile\", \"onSidebarMouseOver\", \"onSidebarMouseLeave\", \"onToggleMenu\", \"onChangeInlinemenu\", \"onMenuClick\", \"onRootMenuitemClick\", \"onMenuitemClick\"]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"ul\", _hoisted_10, [_createElementVNode(\"li\", {\n    id: \"profile\",\n    class: _normalizeClass([\"profile-item\", {\n      'active-topmenuitem': $props.topbarMenuActive\n    }])\n  }, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.onTopbarItemClick($event, 'profile');\n    })\n  }), _createElementVNode(\"ul\", _hoisted_11, [_createElementVNode(\"li\", _hoisted_12, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.onTopbarSubItemClick($event);\n    })\n  }, _hoisted_15)]), _createElementVNode(\"li\", _hoisted_16, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.onTopbarSubItemClick($event);\n    })\n  }, _hoisted_19)])])], 2 /* CLASS */)])])]);\n}","map":{"version":3,"mappings":";;EACMA,KAAK,EAAC;AAAe;;EACdA,KAAK,EAAC;AAAoB;8BAEvBC,oBAA0B;EAAvBD,KAAK,EAAC;AAAY;kBAArBE,UAA0B;;EAG3BC,IAAI,EAAC,GAAG;EAACH,KAAK,EAAC;;;;EAIfG,IAAI,EAAC;AAAG;;;EASVH,KAAK,EAAC;AAAqB;;EACxBA,KAAK,EAAC;AAA2B;;EAKzBA,KAAK,EAAC;AAAY;;EACdI,IAAI,EAAC;AAAU;+BAEXH,oBAAgC;EAA7BD,KAAK,EAAC;AAAkB;+BAC3BC,oBAAoB,cAAd,SAAO;mBADbI,WAAgC,EAChCC,WAAoB;;EAGxBF,IAAI,EAAC;AAAU;+BAEXH,oBAAoC;EAAjCD,KAAK,EAAC;AAAsB;+BAC/BC,oBAAmB,cAAb,QAAM;mBADZM,WAAoC,EACpCC,WAAmB;;;uBAnClDC,oBA0CS,OA1CTC,UA0CS,GAzCFT,oBAYM,OAZNU,UAYM,GAXFV,oBAEI;IAFDE,IAAI,EAAC,GAAG;IAACH,KAAK,EAAC,oBAAoB;IAAEY,OAAK;MAAA,OAAEC,0BAAiB,CAACC,MAAM;IAAA;kBAIvEb,oBAEI,KAFJc,UAEI,GADAd,oBAAyF;IAAnFe,GAAG,2BAA0BC,kBAAW;yCAGlDhB,oBAEI,KAFJiB,UAEI,GADAjB,oBAA8G;IAAxGe,GAAG,8BAA6BC,kBAAW;IAA2CjB,KAAK,EAAC;2CAI1GmB,aAE6GC;IAFnGC,KAAK,EAAEJ,YAAK;IAAGK,QAAQ,EAAEL,eAAQ;IAAGM,WAAW,EAAEN,kBAAW;IAAGO,UAAU,EAAEP,iBAAU;IAAGQ,mBAAmB,EAAER,0BAAmB;IACrIS,kBAAkB,EAAEb,2BAAkB;IAAGc,mBAAmB,EAAEd,4BAAmB;IAAGe,YAAW,EAAEf,qBAAY;IAAGgB,kBAAiB,EAAEhB,iCAAwB;IAC3JiB,WAAU,EAAEjB,oBAAW;IAAGkB,mBAAmB,EAAElB,4BAAmB;IAAGmB,eAAc,EAAEnB;kPAE1FZ,oBAsBM,OAtBNgC,UAsBM,GArBFhC,oBAoBK,MApBLiC,WAoBK,GAnBDjC,oBAkBK;IAlBDkC,EAAE,EAAC,SAAS;IAACnC,KAAK,mBAAC,cAAc;MAAA,sBAAgCiB;IAAgB;MACjFhB,oBACI;IADDE,IAAI,EAAC,GAAG;IAAES,OAAK;MAAA,OAAEC,0BAAiB,CAACC,MAAM;IAAA;MAG5Cb,oBAaK,MAbLmC,WAaK,GAZDnC,oBAKK,MALLoC,WAKK,GAJDpC,oBAGI;IAHDE,IAAI,EAAC,GAAG;IAAES,OAAK;MAAA,OAAEC,6BAAoB,CAACC,MAAM;IAAA;qBAKnDb,oBAKK,MALLqC,WAKK,GAJDrC,oBAGI;IAHDE,IAAI,EAAC,GAAG;IAAES,OAAK;MAAA,OAAEC,6BAAoB,CAACC,MAAM;IAAA","names":["class","_createElementVNode","_hoisted_3","href","role","_hoisted_13","_hoisted_14","_hoisted_17","_hoisted_18","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$options","$event","_hoisted_5","src","$props","_hoisted_7","_createVNode","_component_AppMenu","model","menuMode","colorScheme","menuActive","activeInlineProfile","onSidebarMouseOver","onSidebarMouseLeave","onToggleMenu","onChangeInlinemenu","onMenuClick","onRootMenuitemClick","onMenuitemClick","_hoisted_9","_hoisted_10","id","_hoisted_11","_hoisted_12","_hoisted_16"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppTopbar.vue"],"sourcesContent":["<template>\n\t<div class=\"layout-topbar\">\n        <div class=\"layout-topbar-left\">\n            <a href=\"#\" class=\"topbar-menu-button\" @click=\"onMenuButtonClick($event)\">\n                <i class=\"pi pi-bars\"></i>\n            </a>\n\n            <a href=\"#\" class=\"logo\">\n                <img :src=\"'layout/images/logo-'+ (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\">\n            </a>\n\n            <a href=\"#\">\n                <img :src=\"'layout/images/appname-'+ (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\" class=\"app-name\"/>\n            </a>\n        </div>\n\n        <AppMenu :model=\"items\" :menuMode=\"menuMode\" :colorScheme=\"colorScheme\" :menuActive=\"menuActive\" :activeInlineProfile=\"activeInlineProfile\"\n            @sidebar-mouse-over=\"onSidebarMouseOver\" @sidebar-mouse-leave=\"onSidebarMouseLeave\" @toggle-menu=\"onToggleMenu\" @change-inlinemenu=\"onChangeActiveInlineMenu\" \n            @menu-click=\"onMenuClick\" @root-menuitem-click=\"onRootMenuItemClick\" @menuitem-click=\"onMenuItemClick\" />\n\n        <div class=\"layout-topbar-right\">\n            <ul class=\"layout-topbar-right-items\">\n                <li id=\"profile\" class=\"profile-item\" :class=\"{'active-topmenuitem': topbarMenuActive}\">\n                    <a href=\"#\" @click=\"onTopbarItemClick($event, 'profile')\">\n                    </a>\n\n                    <ul class=\"fadeInDown\">\n                        <li role=\"menuitem\">\n                            <a href=\"#\" @click=\"onTopbarSubItemClick($event)\">\n                                <i class=\"pi pi-fw pi-user\"></i>\n                                <span>Profile</span>\n                            </a>\n                        </li>\n                        <li role=\"menuitem\">\n                            <a href=\"#\" @click=\"onTopbarSubItemClick($event)\">\n                                <i class=\"pi pi-fw pi-sign-out\"></i>\n                                <span>Logout</span>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\nimport AppMenu from './AppMenu.vue';\nexport default {\n\temits: ['menu-click', 'menuitem-click', 'root-menuitem-click', 'menubutton-click', 'sidebar-mouse-over', 'sidebar-mouse-leave', 'toggle-menu', 'change-inlinemenu', 'topbar-item-click'],\n\tdata() {\n\t\treturn {\n\t\t\tactiveTopbarItem: null\n\t\t}\n\t},\n\tprops: {\n        items: Array,\n\t\tmenuMode: String,\n\t\tcolorScheme: String,\n        topbarMenuActive: {\n            type: Boolean,\n            default: false\n        },\n        menuActive: {\n            type: Boolean,\n            default: false\n        },\n        activeInlineProfile: {\n            type: Boolean,\n            default: false\n        }\n\t},\n\tmethods: {\n        onMenuClick(event) {\n            this.$emit('menu-click', event);\n        },\n        onMenuItemClick(event) {\n            this.$emit('menuitem-click', event);\n        },\n        onRootMenuItemClick(event) {\n            this.$emit('root-menuitem-click', event);\n        },\n\t\tonMenuButtonClick(event) {\n\t\t\tthis.$emit('menubutton-click', event);\n\t\t},\n\t\tonTopbarItemClick(event, item) {\n            this.$emit('topbar-item-click', event, item);\t\n\t\t\tevent.preventDefault();\n\t\t},\n\t\tonTopbarSubItemClick(event) {\n\t\t\tevent.preventDefault();\n\t\t},\n        onSidebarMouseOver() {\n            this.$emit('sidebar-mouse-over');\n        },\n        onSidebarMouseLeave() {\n            this.$emit('sidebar-mouse-leave');\n        },\n        onToggleMenu(event) {\n            this.$emit('toggle-menu', event);\n        },\n        onChangeActiveInlineMenu() {\n            this.$emit('change-inlinemenu');\n        },\n\t\tisOverlay() {\n\t\t\treturn this.menuMode === 'overlay';\n\t\t}\n\t},\n\tcomponents: {\n\t\tAppMenu\n\t}\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}