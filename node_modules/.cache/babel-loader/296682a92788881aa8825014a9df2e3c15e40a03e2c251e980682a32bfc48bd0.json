{"ast":null,"code":"import AppMenu from './AppMenu.vue';\nexport default {\n  emits: ['menu-click', 'menuitem-click', 'root-menuitem-click', 'menubutton-click', 'sidebar-mouse-over', 'sidebar-mouse-leave', 'toggle-menu', 'change-inlinemenu', 'topbar-item-click'],\n  data: function data() {\n    return {\n      activeTopbarItem: null\n    };\n  },\n  props: {\n    items: Array,\n    menuMode: String,\n    colorScheme: String,\n    topbarMenuActive: {\n      type: Boolean,\n      default: false\n    },\n    menuActive: {\n      type: Boolean,\n      default: false\n    },\n    activeInlineProfile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    onMenuClick: function onMenuClick(event) {\n      this.$emit('menu-click', event);\n    },\n    onMenuItemClick: function onMenuItemClick(event) {\n      this.$emit('menuitem-click', event);\n    },\n    onRootMenuItemClick: function onRootMenuItemClick(event) {\n      this.$emit('root-menuitem-click', event);\n    },\n    onMenuButtonClick: function onMenuButtonClick(event) {\n      this.$emit('menubutton-click', event);\n    },\n    onTopbarItemClick: function onTopbarItemClick(event, item) {\n      this.$emit('topbar-item-click', event, item);\n      event.preventDefault();\n    },\n    onTopbarSubItemClick: function onTopbarSubItemClick(event) {\n      event.preventDefault();\n    },\n    onSidebarMouseOver: function onSidebarMouseOver() {\n      this.$emit('sidebar-mouse-over');\n    },\n    onSidebarMouseLeave: function onSidebarMouseLeave() {\n      this.$emit('sidebar-mouse-leave');\n    },\n    onToggleMenu: function onToggleMenu(event) {\n      this.$emit('toggle-menu', event);\n    },\n    onChangeActiveInlineMenu: function onChangeActiveInlineMenu() {\n      this.$emit('change-inlinemenu');\n    },\n    isOverlay: function isOverlay() {\n      return this.menuMode === 'overlay';\n    }\n  },\n  components: {\n    AppMenu: AppMenu\n  }\n};","map":{"version":3,"mappings":"AAoEA,OAAOA,OAAM,MAAO,eAAe;AACnC,eAAe;EACdC,KAAK,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,aAAa,EAAE,mBAAmB,EAAE,mBAAmB,CAAC;EACxLC,IAAI,kBAAG;IACN,OAAO;MACNC,gBAAgB,EAAE;IACnB;EACD,CAAC;EACDC,KAAK,EAAE;IACAC,KAAK,EAAEC,KAAK;IAClBC,QAAQ,EAAEC,MAAM;IAChBC,WAAW,EAAED,MAAM;IACbE,gBAAgB,EAAE;MACdC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACb,CAAC;IACDC,UAAU,EAAE;MACRH,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACb,CAAC;IACDE,mBAAmB,EAAE;MACjBJ,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACb;EACP,CAAC;EACDG,OAAO,EAAE;IACFC,WAAW,uBAACC,KAAK,EAAE;MACf,IAAI,CAACC,KAAK,CAAC,YAAY,EAAED,KAAK,CAAC;IACnC,CAAC;IACDE,eAAe,2BAACF,KAAK,EAAE;MACnB,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAED,KAAK,CAAC;IACvC,CAAC;IACDG,mBAAmB,+BAACH,KAAK,EAAE;MACvB,IAAI,CAACC,KAAK,CAAC,qBAAqB,EAAED,KAAK,CAAC;IAC5C,CAAC;IACPI,iBAAiB,6BAACJ,KAAK,EAAE;MACxB,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAED,KAAK,CAAC;IACtC,CAAC;IACDK,iBAAiB,6BAACL,KAAK,EAAEM,IAAI,EAAE;MACrB,IAAI,CAACL,KAAK,CAAC,mBAAmB,EAAED,KAAK,EAAEM,IAAI,CAAC;MACrDN,KAAK,CAACO,cAAc,EAAE;IACvB,CAAC;IACDC,oBAAoB,gCAACR,KAAK,EAAE;MAC3BA,KAAK,CAACO,cAAc,EAAE;IACvB,CAAC;IACKE,kBAAkB,gCAAG;MACjB,IAAI,CAACR,KAAK,CAAC,oBAAoB,CAAC;IACpC,CAAC;IACDS,mBAAmB,iCAAG;MAClB,IAAI,CAACT,KAAK,CAAC,qBAAqB,CAAC;IACrC,CAAC;IACDU,YAAY,wBAACX,KAAK,EAAE;MAChB,IAAI,CAACC,KAAK,CAAC,aAAa,EAAED,KAAK,CAAC;IACpC,CAAC;IACDY,wBAAwB,sCAAG;MACvB,IAAI,CAACX,KAAK,CAAC,mBAAmB,CAAC;IACnC,CAAC;IACPY,SAAS,uBAAG;MACX,OAAO,IAAI,CAACxB,QAAO,KAAM,SAAS;IACnC;EACD,CAAC;EACDyB,UAAU,EAAE;IACXhC,OAAM,EAANA;EACD;AACD","names":["AppMenu","emits","data","activeTopbarItem","props","items","Array","menuMode","String","colorScheme","topbarMenuActive","type","Boolean","default","menuActive","activeInlineProfile","methods","onMenuClick","event","$emit","onMenuItemClick","onRootMenuItemClick","onMenuButtonClick","onTopbarItemClick","item","preventDefault","onTopbarSubItemClick","onSidebarMouseOver","onSidebarMouseLeave","onToggleMenu","onChangeActiveInlineMenu","isOverlay","components"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppTopbar.vue"],"sourcesContent":["<template>\n\t<div class=\"layout-topbar\">\n        <div class=\"layout-topbar-left\">\n            <a href=\"#\" class=\"topbar-menu-button\" @click=\"onMenuButtonClick($event)\">\n                <i class=\"pi pi-bars\"></i>\n            </a>\n\n            <a href=\"#\" class=\"logo\">\n                <img :src=\"'layout/images/logo-'+ (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\">\n            </a>\n\n            <a href=\"#\">\n                <img :src=\"'layout/images/appname-'+ (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\" class=\"app-name\"/>\n            </a>\n        </div>\n\n        <AppMenu :model=\"items\" :menuMode=\"menuMode\" :colorScheme=\"colorScheme\" :menuActive=\"menuActive\" :activeInlineProfile=\"activeInlineProfile\"\n            @sidebar-mouse-over=\"onSidebarMouseOver\" @sidebar-mouse-leave=\"onSidebarMouseLeave\" @toggle-menu=\"onToggleMenu\" @change-inlinemenu=\"onChangeActiveInlineMenu\" \n            @menu-click=\"onMenuClick\" @root-menuitem-click=\"onRootMenuItemClick\" @menuitem-click=\"onMenuItemClick\" />\n\n        <div class=\"layout-topbar-right\">\n            <ul class=\"layout-topbar-right-items\">\n                <li id=\"profile\" class=\"profile-item\" :class=\"{'active-topmenuitem': topbarMenuActive}\">\n                    <a href=\"#\" @click=\"onTopbarItemClick($event, 'profile')\">\n                        <img src=\"layout/images/profile-image.png\">\n                    </a>\n\n                    <ul class=\"fadeInDown\">\n                        <li role=\"menuitem\">\n                            <a href=\"#\" @click=\"onTopbarSubItemClick($event)\">\n                                <i class=\"pi pi-fw pi-user\"></i>\n                                <span>Profile</span>\n                            </a>\n                        </li>\n                        <li role=\"menuitem\">\n                            <a href=\"#\" @click=\"onTopbarSubItemClick($event)\">\n                                <i class=\"pi pi-fw pi-cog\"></i>\n                                <span>Settings</span>\n                            </a>\n                        </li>\n                        <li role=\"menuitem\">\n                            <a href=\"#\" @click=\"onTopbarSubItemClick($event)\">\n                                <i class=\"pi pi-fw pi-sign-out\"></i>\n                                <span>Logout</span>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <a href=\"#\">\n                        <i class=\"topbar-icon pi pi-fw pi-bell\"></i>\n                        <span class=\"topbar-badge\">2</span>\n                        <span class=\"topbar-item-name\">Notifications</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\">\n                        <i class=\"topbar-icon pi pi-fw pi-comment\"></i>\n                        <span class=\"topbar-badge\">5</span>\n                        <span class=\"topbar-item-name\">Messages</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\nimport AppMenu from './AppMenu.vue';\nexport default {\n\temits: ['menu-click', 'menuitem-click', 'root-menuitem-click', 'menubutton-click', 'sidebar-mouse-over', 'sidebar-mouse-leave', 'toggle-menu', 'change-inlinemenu', 'topbar-item-click'],\n\tdata() {\n\t\treturn {\n\t\t\tactiveTopbarItem: null\n\t\t}\n\t},\n\tprops: {\n        items: Array,\n\t\tmenuMode: String,\n\t\tcolorScheme: String,\n        topbarMenuActive: {\n            type: Boolean,\n            default: false\n        },\n        menuActive: {\n            type: Boolean,\n            default: false\n        },\n        activeInlineProfile: {\n            type: Boolean,\n            default: false\n        }\n\t},\n\tmethods: {\n        onMenuClick(event) {\n            this.$emit('menu-click', event);\n        },\n        onMenuItemClick(event) {\n            this.$emit('menuitem-click', event);\n        },\n        onRootMenuItemClick(event) {\n            this.$emit('root-menuitem-click', event);\n        },\n\t\tonMenuButtonClick(event) {\n\t\t\tthis.$emit('menubutton-click', event);\n\t\t},\n\t\tonTopbarItemClick(event, item) {\n            this.$emit('topbar-item-click', event, item);\t\n\t\t\tevent.preventDefault();\n\t\t},\n\t\tonTopbarSubItemClick(event) {\n\t\t\tevent.preventDefault();\n\t\t},\n        onSidebarMouseOver() {\n            this.$emit('sidebar-mouse-over');\n        },\n        onSidebarMouseLeave() {\n            this.$emit('sidebar-mouse-leave');\n        },\n        onToggleMenu(event) {\n            this.$emit('toggle-menu', event);\n        },\n        onChangeActiveInlineMenu() {\n            this.$emit('change-inlinemenu');\n        },\n\t\tisOverlay() {\n\t\t\treturn this.menuMode === 'overlay';\n\t\t}\n\t},\n\tcomponents: {\n\t\tAppMenu\n\t}\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}