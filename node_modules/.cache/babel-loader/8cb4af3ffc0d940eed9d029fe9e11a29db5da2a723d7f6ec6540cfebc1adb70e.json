{"ast":null,"code":"import EventService from '../service/EventService';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nexport default {\n  data: function data() {\n    var _this = this;\n    return {\n      eventDialog: false,\n      clickedEvent: null,\n      changedEvent: {\n        title: '',\n        start: null,\n        end: '',\n        allDay: null\n      },\n      options: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialDate: '2023-01-01',\n        headerToolbar: {\n          left: 'prev,next',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        eventClick: function eventClick(e) {\n          _this.eventDialog = true;\n          _this.clickedEvent = e.event;\n          _this.changedEvent.title = _this.clickedEvent.title;\n          _this.changedEvent.start = _this.clickedEvent.start;\n          _this.changedEvent.end = _this.clickedEvent.end;\n        }\n      },\n      events: null\n    };\n  },\n  eventService: null,\n  created: function created() {\n    this.eventService = new EventService();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.eventService.getEvents().then(function (data) {\n      return _this2.events = data;\n    });\n  },\n  methods: {\n    findIndexById: function findIndexById(id) {\n      var index = -1;\n      for (var i = 0; i < this.events.length; i++) {\n        if (this.events[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    },\n    save: function save() {\n      this.eventDialog = false;\n      this.clickedEvent.setProp('title', this.changedEvent.title);\n      this.clickedEvent.setStart(this.changedEvent.start);\n      this.clickedEvent.setEnd(this.changedEvent.end);\n      this.clickedEvent.setAllDay(this.changedEvent.allDay);\n      this.changedEvent = {\n        title: '',\n        start: null,\n        end: '',\n        allDay: null\n      };\n    },\n    reset: function reset() {\n      this.changedEvent.title = this.clickedEvent.title;\n      this.changedEvent.start = this.clickedEvent.start;\n      this.changedEvent.end = this.clickedEvent.end;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["EventService","dayGridPlugin","timeGridPlugin","interactionPlugin","data","eventDialog","clickedEvent","changedEvent","title","start","end","allDay","options","plugins","initialDate","headerToolbar","left","center","right","editable","selectable","selectMirror","dayMaxEvents","eventClick","e","event","events","eventService","created","mounted","getEvents","then","methods","findIndexById","id","index","i","length","save","setProp","setStart","setEnd","setAllDay","reset"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\pages\\CalendarDemo.vue"],"sourcesContent":["<template>\n\t<div class=\"grid\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<h5>Calendar</h5>\n\t\t\t\t<FullCalendar :events=\"events\" :options=\"options\" />\n\n\t\t\t\t<Dialog v-model:visible=\"eventDialog\" :style=\"{width: '450px'}\" header=\"Event Details\" :modal=\"true\" :closable=\"true\">\n\t\t\t\t\t<div class=\"p-fluid\">\n\t\t\t\t\t\t<div class=\"field\">\n\t\t\t\t\t\t\t<label for=\"title\">Title</label>\n\t\t\t\t\t\t\t<InputText id=\"title\" v-if=\"clickedEvent\" v-model=\"changedEvent.title\" required=\"true\" autofocus/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"field\">\n\t\t\t\t\t\t\t<label for=\"start\">From</label>\n\t\t\t\t\t\t\t<Calendar id=\"start\" v-if=\"clickedEvent\" v-model=\"changedEvent.start\" :showTime=\"true\" appendTo=\"body\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"field\">\n\t\t\t\t\t\t\t<label for=\"end\">To</label>\n\t\t\t\t\t\t\t<Calendar id=\"end\" v-if=\"clickedEvent\" v-model=\"changedEvent.end\" :showTime=\"true\" appendTo=\"body\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"field-checkbox\">\n\t\t\t\t\t\t\t<Checkbox id=\"allday\" name=\"allday\" value=\"All Day\" v-model=\"changedEvent.allDay\" />\n\t\t\t\t\t\t\t<label for=\"allday\">All Day</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<template #footer>\n\t\t\t\t\t\t<Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"save\"/>\n\t\t\t\t\t\t<Button label=\"Reset\" icon=\"pi pi-refresh\" class=\"p-button-text\" @click=\"reset\" />\n\t\t\t\t\t</template>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport EventService from '../service/EventService';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\teventDialog: false,\n\t\t\tclickedEvent: null,\n\t\t\tchangedEvent: {title:'', start: null, end:'', allDay: null},\n\t\t\toptions: {\n                plugins:[dayGridPlugin, timeGridPlugin, interactionPlugin],\n                initialDate : '2023-01-01',\n                headerToolbar: {\n                    left: 'prev,next',\n                    center: 'title',\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                },\n                editable: true,\n                selectable:true, \n                selectMirror: true, \n                dayMaxEvents: true,\n\t\t\t\teventClick: (e) => {\n                    this.eventDialog = true;\n                    this.clickedEvent = e.event;\n                    this.changedEvent.title = this.clickedEvent.title;\n                    this.changedEvent.start = this.clickedEvent.start;\n                    this.changedEvent.end = this.clickedEvent.end;\n                }\n            },\n            events: null\n\t\t};\n\t},\n\teventService: null,\n\tcreated() {\n\t\tthis.eventService = new EventService();\n\t},\n\tmounted() {\n\t\tthis.eventService.getEvents().then(data => this.events = data);\n\t},\n\tmethods: {\n\t\tfindIndexById(id) {\n\t\t\tlet index = -1;\n\t\t\tfor (let i = 0; i < this.events.length; i++) {\n\t\t\t\tif (this.events[i].id === id) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index;\n\t\t},\n\t\tsave() {\n\t\t\tthis.eventDialog = false;\n\t\t\tthis.clickedEvent.setProp('title', this.changedEvent.title)\n\t\t\tthis.clickedEvent.setStart(this.changedEvent.start)\n\t\t\tthis.clickedEvent.setEnd(this.changedEvent.end)\n\t\t\tthis.clickedEvent.setAllDay(this.changedEvent.allDay)\n\t\t\tthis.changedEvent = {title:'', start: null, end:'', allDay: null};\n\t\t},\n\t\treset() {\n\t\t\tthis.changedEvent.title = this.clickedEvent.title;\n\t\t\tthis.changedEvent.start = this.clickedEvent.start;\n\t\t\tthis.changedEvent.end = this.clickedEvent.end;\n\t\t}\n\t}\n}\n</script>\n\n<style scoped>\n@media screen and (max-width: 960px) {\n    ::v-deep(.fc-header-toolbar) {\n        display: flex;\n        flex-wrap: wrap;\n    }\n}\n\n::v-deep(.fc .fc-col-header-cell-cushion),\n::v-deep(.fc-daygrid-dot-event .fc-event-time),\n::v-deep(.fc-daygrid-dot-event .fc-event-title),\n::v-deep(.fc .fc-daygrid-day-number),\n::v-deep(.fc .fc-daygrid-more-link) {\n\tcolor: var(--text-color);\n}\n\n::v-deep(.fc.fc-theme-standard .fc-highlight) {\n\tbackground: var(--fc-highlight-color, rgba(188, 232, 241, 0.3));\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}