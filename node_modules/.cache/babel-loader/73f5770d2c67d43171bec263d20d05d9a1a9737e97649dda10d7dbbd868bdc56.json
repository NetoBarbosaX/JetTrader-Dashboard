{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  class: \"menu-logo\"\n};\nvar _hoisted_2 = {\n  href: \"#\",\n  class: \"logo\"\n};\nvar _hoisted_3 = [\"src\"];\nvar _hoisted_4 = {\n  href: \"#\",\n  class: \"app-name\"\n};\nvar _hoisted_5 = [\"src\"];\nvar _hoisted_6 = {\n  key: 0,\n  class: \"pi pi-times\"\n};\nvar _hoisted_7 = {\n  key: 1,\n  class: \"pi pi-unlock\"\n};\nvar _hoisted_8 = {\n  key: 2,\n  class: \"pi pi-lock\"\n};\nvar _hoisted_9 = {\n  class: \"layout-menu-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_AppSubmenu = _resolveComponent(\"AppSubmenu\");\n  var _component_AppInlineMenu = _resolveComponent(\"AppInlineMenu\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"layout-menu-wrapper\", {\n      'layout-sidebar-active': $props.sidebarActive\n    }]),\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.onMenuClick && $options.onMenuClick.apply($options, arguments);\n    }),\n    onMouseover: _cache[2] || (_cache[2] = function () {\n      return $options.onSidebarMouseOver && $options.onSidebarMouseOver.apply($options, arguments);\n    }),\n    onMouseleave: _cache[3] || (_cache[3] = function () {\n      return $options.onSidebarMouseLeave && $options.onSidebarMouseLeave.apply($options, arguments);\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"a\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: 'layout/images/logo-' + ($props.colorScheme === 'light' ? 'dark' : 'light') + '.svg'\n  }, null, 8, _hoisted_3)]), _createElementVNode(\"a\", _hoisted_4, [_createElementVNode(\"img\", {\n    style: {\n      \"height\": \"77px\"\n    },\n    src: 'layout/images/appname-' + ($props.colorScheme === 'light' ? 'dark' : 'light') + '.svg'\n  }, null, 8, _hoisted_5)]), _createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"menu-pin\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.onToggleMenu && $options.onToggleMenu.apply($options, arguments);\n    })\n  }, [$options.isOverlay() ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6)) : _createCommentVNode(\"\", true), $options.isSidebar() && !$props.sidebarStatic && $props.pinActive ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7)) : _createCommentVNode(\"\", true), $options.isSidebar() && $props.sidebarStatic && $props.pinActive ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8)) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_AppSubmenu, {\n    class: \"layout-menu\",\n    items: $props.model,\n    menuMode: $props.menuMode,\n    menuActive: $props.menuActive,\n    root: true,\n    parentMenuItemActive: true,\n    onMenuClick: $options.onMenuClick,\n    onMenuitemClick: $options.onMenuItemClick,\n    onRootMenuitemClick: $options.onRootMenuItemClick\n  }, null, 8, [\"items\", \"menuMode\", \"menuActive\", \"onMenuClick\", \"onMenuitemClick\", \"onRootMenuitemClick\"])]), _createVNode(_component_AppInlineMenu, {\n    menuMode: $props.menuMode,\n    activeInlineProfile: $props.activeInlineProfile,\n    onChangeInlinemenu: $options.onChangeActiveInlineMenu\n  }, null, 8, [\"menuMode\", \"activeInlineProfile\", \"onChangeInlinemenu\"])], 34);\n}","map":{"version":3,"mappings":";;EAEaA,KAAK,EAAC;AAAW;;EACfC,IAAI,EAAC,GAAG;EAACD,KAAK,EAAC;;;;EAIfC,IAAI,EAAC,GAAG;EAACD,KAAK,EAAC;;;;;EAIWA,KAAK,EAAC;;;;EACyBA,KAAK,EAAC;;;;EACPA,KAAK,EAAC;;;EAIhEA,KAAK,EAAC;AAAuB;;;;uBAhBtCE,oBA+BM;IA/BDF,KAAK,mBAAC,qBAAqB;MAAA,yBAAoCG;IAAa;IAAKC,OAAK;MAAA,OAAEC,uEAAW;IAAA;IAAGC,WAAS;MAAA,OAAED,qFAAkB;IAAA;IAAGE,YAAU;MAAA,OAAEF,uFAAmB;IAAA;MACtKG,oBAaM,OAbNC,UAaM,GAZFD,oBAEI,KAFJE,UAEI,GADAF,oBAA4F;IAAtFG,GAAG,2BAA2BR,kBAAW;6BAGnDK,oBAEI,KAFJI,UAEI,GADAJ,oBAAoH;IAA/GK,KAAoB,EAApB;MAAA;IAAA,CAAoB;IAAEF,GAAG,8BAA8BR,kBAAW;6BAE3EK,oBAII;IAJDP,IAAI,EAAC,GAAG;IAACD,KAAK,EAAC,UAAU;IAAEI,OAAK;MAAA,OAAEC,yEAAY;IAAA;MACjCA,kBAAS,oBAArBH,oBAAoD,QAApDY,UAAoD,oCACxCT,kBAAS,OAAOF,oBAAa,IAAIA,gBAAS,kBAAtDD,oBAAoF,QAApFa,UAAoF,oCACxEV,kBAAS,MAAMF,oBAAa,IAAIA,gBAAS,kBAArDD,oBAAiF,QAAjFc,UAAiF,wCAIzFR,oBAYM,OAZNS,UAYM,GAXFC,aAUEC;IATEnB,KAAK,EAAC,aAAa;IAClBoB,KAAK,EAAEjB,YAAK;IACZkB,QAAQ,EAAElB,eAAQ;IAClBmB,UAAU,EAAEnB,iBAAU;IACtBoB,IAAI,EAAE,IAAI;IACVC,oBAAoB,EAAE,IAAI;IAC1BC,WAAU,EAAEpB,oBAAW;IACvBqB,eAAc,EAAErB,wBAAe;IAC/BsB,mBAAmB,EAAEtB;+GAI9Ba,aAA6IU;IAA7HP,QAAQ,EAAElB,eAAQ;IAAG0B,mBAAmB,EAAE1B,0BAAmB;IAAG2B,kBAAiB,EAAEzB","names":["class","href","_createElementBlock","$props","onClick","$options","onMouseover","onMouseleave","_createElementVNode","_hoisted_1","_hoisted_2","src","_hoisted_4","style","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createVNode","_component_AppSubmenu","items","menuMode","menuActive","root","parentMenuItemActive","onMenuClick","onMenuitemClick","onRootMenuitemClick","_component_AppInlineMenu","activeInlineProfile","onChangeInlinemenu"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppMenu.vue"],"sourcesContent":["<template>\n    <div class=\"layout-menu-wrapper\" :class=\"{ 'layout-sidebar-active': sidebarActive }\" @click=\"onMenuClick\" @mouseover=\"onSidebarMouseOver\" @mouseleave=\"onSidebarMouseLeave\">\n        <div class=\"menu-logo\">\n            <a href=\"#\" class=\"logo\">\n                <img :src=\"'layout/images/logo-' + (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\" />\n            </a>\n\n            <a href=\"#\" class=\"app-name\" >\n                <img style=\"height: 77px\" :src=\"'layout/images/appname-' + (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\" />\n            </a>\n            <a href=\"#\" class=\"menu-pin\" @click=\"onToggleMenu\">\n                <span v-if=\"isOverlay()\" class=\"pi pi-times\"></span>\n                <span v-if=\"isSidebar() && !sidebarStatic && pinActive\" class=\"pi pi-unlock\"></span>\n                <span v-if=\"isSidebar() && sidebarStatic && pinActive\" class=\"pi pi-lock\"></span>\n            </a>\n        </div>\n\n        <div class=\"layout-menu-container\">\n            <AppSubmenu\n                class=\"layout-menu\"\n                :items=\"model\"\n                :menuMode=\"menuMode\"\n                :menuActive=\"menuActive\"\n                :root=\"true\"\n                :parentMenuItemActive=\"true\"\n                @menu-click=\"onMenuClick\"\n                @menuitem-click=\"onMenuItemClick\"\n                @root-menuitem-click=\"onRootMenuItemClick\"\n            />\n        </div>\n\n        <AppInlineMenu :menuMode=\"menuMode\" :activeInlineProfile=\"activeInlineProfile\" @change-inlinemenu=\"onChangeActiveInlineMenu\"></AppInlineMenu>\n    </div>\n</template>\n\n<script>\nimport AppSubmenu from './AppSubmenu';\nimport AppInlineMenu from './AppInlineMenu';\n\nexport default {\n    name: 'AppMenu',\n    emits: ['menu-click', 'menuitem-click', 'root-menuitem-click', 'sidebar-mouse-over', 'sidebar-mouse-leave', 'toggle-menu', 'change-inlinemenu'],\n    props: {\n        model: Array,\n        menuMode: String,\n        colorScheme: String,\n        menuActive: {\n            type: Boolean,\n            default: false,\n        },\n        activeInlineProfile: {\n            type: Boolean,\n            default: false,\n        },\n        sidebarActive: {\n            type: Boolean,\n            default: false,\n        },\n        sidebarStatic: {\n            type: Boolean,\n            default: false,\n        },\n        pinActive: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    components: {\n        AppSubmenu,\n        AppInlineMenu,\n    },\n    methods: {\n        onSidebarMouseOver() {\n            this.$emit('sidebar-mouse-over');\n        },\n        onSidebarMouseLeave() {\n            this.$emit('sidebar-mouse-leave');\n        },\n        onMenuClick(event) {\n            this.$emit('menu-click', event);\n        },\n        onMenuItemClick(event) {\n            this.$emit('menuitem-click', event);\n        },\n        onRootMenuItemClick(event) {\n            this.$emit('root-menuitem-click', event);\n        },\n        onToggleMenu(event) {\n            this.$emit('toggle-menu', event);\n        },\n        onChangeActiveInlineMenu() {\n            this.$emit('change-inlinemenu');\n        },\n        isHorizontal() {\n            return this.menuMode === 'horizontal';\n        },\n        isSlim() {\n            return this.menuMode === 'slim';\n        },\n        isOverlay() {\n            return this.menuMode === 'overlay';\n        },\n        isStatic() {\n            return this.menuMode === 'static';\n        },\n        isSidebar() {\n            return this.menuMode === 'sidebar';\n        },\n        isDesktop() {\n            return window.innerWidth > 991;\n        },\n        isMobile() {\n            return window.innerWidth <= 991;\n        },\n    },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}