{"ast":null,"code":"export default {\n  name: 'AppInlineMenu',\n  emits: ['change-inlinemenu'],\n  props: {\n    menuMode: String,\n    activeInlineProfile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    onChangeActiveInlineMenu: function onChangeActiveInlineMenu(event) {\n      this.$emit('change-inlinemenu', event);\n      event.preventDefault();\n    },\n    isHorizontal: function isHorizontal() {\n      return this.menuMode === 'horizontal';\n    },\n    isSlim: function isSlim() {\n      return this.menuMode === 'slim';\n    },\n    isOverlay: function isOverlay() {\n      return this.menuMode === 'overlay';\n    },\n    isStatic: function isStatic() {\n      return this.menuMode === 'static';\n    },\n    isSidebar: function isSidebar() {\n      return this.menuMode === 'sidebar';\n    },\n    isDesktop: function isDesktop() {\n      return window.innerWidth > 991;\n    },\n    isMobile: function isMobile() {\n      return window.innerWidth <= 991;\n    }\n  }\n};","map":{"version":3,"mappings":"AA2BC,eAAe;EACRA,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,KAAK,EAAE;IACHC,QAAQ,EAAEC,MAAM;IAChBC,mBAAmB,EAAE;MACjBC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,wBAAwB,oCAACC,KAAK,EAAE;MAC5B,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,KAAK,CAAC;MACtCA,KAAK,CAACE,cAAc,EAAE;IAC1B,CAAC;IACDC,YAAY,0BAAG;MACX,OAAO,IAAI,CAACX,QAAO,KAAM,YAAY;IACzC,CAAC;IACDY,MAAM,oBAAG;MACL,OAAO,IAAI,CAACZ,QAAO,KAAM,MAAM;IACnC,CAAC;IACDa,SAAS,uBAAG;MACR,OAAO,IAAI,CAACb,QAAO,KAAM,SAAS;IACtC,CAAC;IACDc,QAAQ,sBAAG;MACP,OAAO,IAAI,CAACd,QAAO,KAAM,QAAQ;IACrC,CAAC;IACDe,SAAS,uBAAG;MACR,OAAO,IAAI,CAACf,QAAO,KAAM,SAAS;IACtC,CAAC;IACDgB,SAAS,uBAAG;MACR,OAAOC,MAAM,CAACC,UAAS,GAAI,GAAG;IAClC,CAAC;IACDC,QAAQ,sBAAG;MACP,OAAOF,MAAM,CAACC,UAAS,IAAK,GAAG;IACnC;EACJ;AACP","names":["name","emits","props","menuMode","String","activeInlineProfile","type","Boolean","default","methods","onChangeActiveInlineMenu","event","$emit","preventDefault","isHorizontal","isSlim","isOverlay","isStatic","isSidebar","isDesktop","window","innerWidth","isMobile"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppInlineMenu.vue"],"sourcesContent":["<template>\n    <div :class=\"['layout-inline-menu', {'layout-inline-menu-active': activeInlineProfile}]\" v-if=\"!isMobile() && (isStatic() || isSlim() || isSidebar())\">\n        <a class=\"layout-inline-menu-action\" @click=\"onChangeActiveInlineMenu\">\n            <span class=\"layout-inline-menu-text\">Gene Russell</span>\n            <i class=\"layout-inline-menu-icon pi pi-angle-down\"></i>\n        </a>\n\n        <transition name=\"layout-inline-menu-action-panel\">\n            <ul v-show=\"activeInlineProfile\" class=\"layout-inline-menu-action-panel\">\n                <li class=\"layout-inline-menu-action-item\">\n                    <a>\n                        <i class=\"pi pi-power-off pi-fw\"></i>\n                        <span>Logout</span>\n                    </a>\n                </li>\n                <li class=\"layout-inline-menu-action-item\">\n                    <a href=\"/editProfile\">\n                        <i class=\"pi pi-user pi-fw\"></i>\n                        <span>Profile</span>\n                    </a>\n                </li>\n            </ul>\n        </transition>\n    </div>\n</template>\n\n<script>\n\texport default {\n        name: 'AppInlineMenu',\n        emits: ['change-inlinemenu'],\n        props: {\n            menuMode: String,\n            activeInlineProfile: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            onChangeActiveInlineMenu(event) {\n                this.$emit('change-inlinemenu', event);\n                event.preventDefault();\n            },\n            isHorizontal() {\n                return this.menuMode === 'horizontal';\n            },\n            isSlim() {\n                return this.menuMode === 'slim';\n            },\n            isOverlay() {\n                return this.menuMode === 'overlay';\n            },\n            isStatic() {\n                return this.menuMode === 'static';\n            },\n            isSidebar() {\n                return this.menuMode === 'sidebar';\n            },\n            isDesktop() {\n                return window.innerWidth > 991;\n            },\n            isMobile() {\n                return window.innerWidth <= 991;\n            }\n        }\n\t}\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}