{"ast":null,"code":"import AppSubmenu from './AppSubmenu';\nimport AppInlineMenu from './AppInlineMenu';\nexport default {\n  name: 'AppMenu',\n  emits: ['menu-click', 'menuitem-click', 'root-menuitem-click', 'sidebar-mouse-over', 'sidebar-mouse-leave', 'toggle-menu', 'change-inlinemenu'],\n  props: {\n    model: Array,\n    menuMode: String,\n    colorScheme: String,\n    menuActive: {\n      type: Boolean,\n      default: false\n    },\n    activeInlineProfile: {\n      type: Boolean,\n      default: false\n    },\n    sidebarActive: {\n      type: Boolean,\n      default: false\n    },\n    sidebarStatic: {\n      type: Boolean,\n      default: false\n    },\n    pinActive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    AppSubmenu: AppSubmenu,\n    AppInlineMenu: AppInlineMenu\n  },\n  methods: {\n    onSidebarMouseOver: function onSidebarMouseOver() {\n      this.$emit('sidebar-mouse-over');\n    },\n    onSidebarMouseLeave: function onSidebarMouseLeave() {\n      this.$emit('sidebar-mouse-leave');\n    },\n    onMenuClick: function onMenuClick(event) {\n      this.$emit('menu-click', event);\n    },\n    onMenuItemClick: function onMenuItemClick(event) {\n      this.$emit('menuitem-click', event);\n    },\n    onRootMenuItemClick: function onRootMenuItemClick(event) {\n      this.$emit('root-menuitem-click', event);\n    },\n    onToggleMenu: function onToggleMenu(event) {\n      this.$emit('toggle-menu', event);\n    },\n    onChangeActiveInlineMenu: function onChangeActiveInlineMenu() {\n      this.$emit('change-inlinemenu');\n    },\n    isHorizontal: function isHorizontal() {\n      return this.menuMode === 'horizontal';\n    },\n    isSlim: function isSlim() {\n      return this.menuMode === 'slim';\n    },\n    isOverlay: function isOverlay() {\n      return this.menuMode === 'overlay';\n    },\n    isStatic: function isStatic() {\n      return this.menuMode === 'static';\n    },\n    isSidebar: function isSidebar() {\n      return this.menuMode === 'sidebar';\n    },\n    isDesktop: function isDesktop() {\n      return window.innerWidth > 991;\n    },\n    isMobile: function isMobile() {\n      return window.innerWidth <= 991;\n    }\n  }\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,UAAS,MAAO,cAAc;AACrC,OAAOC,aAAY,MAAO,iBAAiB;AAE3C,eAAe;EACdC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,aAAa,EAAE,mBAAmB,CAAC;EAC/IC,KAAK,EAAE;IACNC,KAAK,EAAEC,KAAK;IACZC,QAAQ,EAAEC,MAAM;IAChBC,WAAW,EAAED,MAAM;IACnBE,UAAU,EAAE;MACFC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACb,CAAC;IACPC,mBAAmB,EAAE;MACpBH,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACV,CAAC;IACDE,aAAa,EAAE;MACdJ,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACV,CAAC;IACDG,aAAa,EAAE;MACdL,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACV,CAAC;IACDI,SAAS,EAAE;MACVN,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACV;EACD,CAAC;EACDK,UAAU,EAAE;IACXlB,UAAU,EAAVA,UAAU;IACVC,aAAY,EAAZA;EACD,CAAC;EACDkB,OAAO,EAAE;IACRC,kBAAkB,gCAAG;MACX,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IACpC,CAAC;IACDC,mBAAmB,iCAAG;MAClB,IAAI,CAACD,KAAK,CAAC,qBAAqB,CAAC;IACrC,CAAC;IACPE,WAAW,uBAACC,KAAK,EAAE;MACT,IAAI,CAACH,KAAK,CAAC,YAAY,EAAEG,KAAK,CAAC;IACnC,CAAC;IACDC,eAAe,2BAACD,KAAK,EAAE;MACnB,IAAI,CAACH,KAAK,CAAC,gBAAgB,EAAEG,KAAK,CAAC;IACvC,CAAC;IACPE,mBAAmB,+BAACF,KAAK,EAAE;MAC1B,IAAI,CAACH,KAAK,CAAC,qBAAqB,EAAEG,KAAK,CAAC;IACzC,CAAC;IACDG,YAAY,wBAACH,KAAK,EAAE;MACV,IAAI,CAACH,KAAK,CAAC,aAAa,EAAEG,KAAK,CAAC;IACpC,CAAC;IACPI,wBAAwB,sCAAG;MAC1B,IAAI,CAACP,KAAK,CAAC,mBAAmB,CAAC;IAChC,CAAC;IACDQ,YAAY,0BAAG;MACd,OAAO,IAAI,CAACtB,QAAO,KAAM,YAAY;IACtC,CAAC;IACDuB,MAAM,oBAAG;MACR,OAAO,IAAI,CAACvB,QAAO,KAAM,MAAM;IAChC,CAAC;IACDwB,SAAS,uBAAG;MACX,OAAO,IAAI,CAACxB,QAAO,KAAM,SAAS;IACnC,CAAC;IACDyB,QAAQ,sBAAG;MACV,OAAO,IAAI,CAACzB,QAAO,KAAM,QAAQ;IAClC,CAAC;IACD0B,SAAS,uBAAG;MACX,OAAO,IAAI,CAAC1B,QAAO,KAAM,SAAS;IACnC,CAAC;IACD2B,SAAS,uBAAG;MACX,OAAOC,MAAM,CAACC,UAAS,GAAI,GAAG;IAC/B,CAAC;IACDC,QAAQ,sBAAG;MACV,OAAOF,MAAM,CAACC,UAAS,IAAK,GAAG;IAChC;EACD;AACD","names":["AppSubmenu","AppInlineMenu","name","emits","props","model","Array","menuMode","String","colorScheme","menuActive","type","Boolean","default","activeInlineProfile","sidebarActive","sidebarStatic","pinActive","components","methods","onSidebarMouseOver","$emit","onSidebarMouseLeave","onMenuClick","event","onMenuItemClick","onRootMenuItemClick","onToggleMenu","onChangeActiveInlineMenu","isHorizontal","isSlim","isOverlay","isStatic","isSidebar","isDesktop","window","innerWidth","isMobile"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppMenu.vue"],"sourcesContent":["<template>\n\t<div class=\"layout-menu-wrapper\" :class=\"{'layout-sidebar-active': sidebarActive}\"\n\t\t@click=\"onMenuClick\" @mouseover=\"onSidebarMouseOver\" @mouseleave=\"onSidebarMouseLeave\">\n\t\t<div class=\"menu-logo\">\n\n\t\t\t<a href=\"#\" class=\"logo\">\n\t\t\t\t<img :src=\"'layout/images/logo-'+ (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\">\n\t\t\t</a>\n\n\t\t\t<a href=\"#\" class=\"app-name\" style=\"width:140px\">\n\t\t\t\t<img :src=\"'layout/images/appname-'+ (colorScheme === 'light' ? 'dark' : 'light') + '.svg'\"/>\n\t\t\t</a>\n\t\t\t<a href=\"#\" class=\"menu-pin\" @click=\"onToggleMenu\">\n\t\t\t\t<span v-if=\"isOverlay()\" class=\"pi pi-times\"></span>\n\t\t\t\t<span v-if=\"isSidebar() && !sidebarStatic && pinActive\" class=\"pi pi-unlock\"></span>\n\t\t\t\t<span v-if=\"isSidebar() && sidebarStatic && pinActive\" class=\"pi pi-lock\"></span>\n\t\t\t</a>\n\t\t</div>\n\n\t\t<div class=\"layout-menu-container\">\n\t\t\t<AppSubmenu class=\"layout-menu\" :items=\"model\" :menuMode=\"menuMode\" :menuActive=\"menuActive\" :root=\"true\" :parentMenuItemActive=\"true\"\n\t\t\t\t@menu-click=\"onMenuClick\" @menuitem-click=\"onMenuItemClick\" @root-menuitem-click=\"onRootMenuItemClick\"/>\n\t\t</div>\n\n\t\t<AppInlineMenu :menuMode=\"menuMode\" :activeInlineProfile=\"activeInlineProfile\" @change-inlinemenu=\"onChangeActiveInlineMenu\"></AppInlineMenu>\n\t</div>\n</template>\n\n<script>\nimport AppSubmenu from './AppSubmenu';\nimport AppInlineMenu from './AppInlineMenu';\n\nexport default {\n\tname: 'AppMenu',\n\temits: ['menu-click', 'menuitem-click', 'root-menuitem-click', 'sidebar-mouse-over', 'sidebar-mouse-leave', 'toggle-menu', 'change-inlinemenu'],\n\tprops: {\n\t\tmodel: Array,\n\t\tmenuMode: String,\n\t\tcolorScheme: String,\n\t\tmenuActive: {\n            type: Boolean,\n            default: false\n        },\n\t\tactiveInlineProfile: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tsidebarActive: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tsidebarStatic: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tpinActive: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tcomponents: {\n\t\tAppSubmenu,\n\t\tAppInlineMenu\n\t},\n\tmethods: {\n\t\tonSidebarMouseOver() {\n            this.$emit('sidebar-mouse-over');\n        },\n        onSidebarMouseLeave() {\n            this.$emit('sidebar-mouse-leave');\n        },\n\t\tonMenuClick(event) {\n            this.$emit('menu-click', event);\n        },\n        onMenuItemClick(event) {\n            this.$emit('menuitem-click', event);\n        },\n\t\tonRootMenuItemClick(event) {\n\t\t\tthis.$emit('root-menuitem-click', event);\n\t\t},\n\t\tonToggleMenu(event) {\n            this.$emit('toggle-menu', event);\n        },\n\t\tonChangeActiveInlineMenu() {\n\t\t\tthis.$emit('change-inlinemenu');\n\t\t},\n\t\tisHorizontal() {\n\t\t\treturn this.menuMode === 'horizontal';\n\t\t},\n\t\tisSlim() {\n\t\t\treturn this.menuMode === 'slim';\n\t\t},\n\t\tisOverlay() {\n\t\t\treturn this.menuMode === 'overlay';\n\t\t},\n\t\tisStatic() {\n\t\t\treturn this.menuMode === 'static';\n\t\t},\n\t\tisSidebar() {\n\t\t\treturn this.menuMode === 'sidebar';\n\t\t},\n\t\tisDesktop() {\n\t\t\treturn window.innerWidth > 991;\n\t\t},\n\t\tisMobile() {\n\t\t\treturn window.innerWidth <= 991;\n\t\t}\n\t}\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}