{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      editingRows: [],\n      data: null,\n      disabled: true,\n      user: {\n        name: 'Jet Trader',\n        email: 'exemplo@exemplo.com',\n        phone: '99 99999-9999',\n        password: 'adsadadasd',\n        confirmPassword: 'adsadadasd'\n      },\n      userDataMT4: {\n        name: '',\n        tradeId: '',\n        tradePassword: '',\n        server: ''\n      },\n      dropdownItems: [{\n        name: 'Option 1',\n        code: 'Option 1'\n      }, {\n        name: 'Option 2',\n        code: 'Option 2'\n      }, {\n        name: 'Option 3',\n        code: 'Option 3'\n      }],\n      dropdownItem: null\n    };\n  },\n  methods: {\n    onRowEditSave: function onRowEditSave(event) {\n      var newData = event.newData,\n        index = event.index;\n      this.products2[index] = newData;\n    },\n    getStatusLabel: function getStatusLabel(status) {\n      switch (status) {\n        case 'INSTOCK':\n          return 'In Stock';\n        case 'LOWSTOCK':\n          return 'Low Stock';\n        case 'OUTOFSTOCK':\n          return 'Out of Stock';\n        default:\n          return 'NA';\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      console.log(this.userDataMT4);\n      axios.post('/api/submit', this.userDataMT4).then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    toggleDisabled: function toggleDisabled() {\n      this.disabled = !this.disabled;\n    },\n    handleChange: function handleChange() {\n      this.user.name = this.userEdit.name;\n      this.user.email = this.userEdit.email;\n      this.user.phone = this.userEdit.phone;\n      this.user.password = this.userEdit.password;\n      this.user.confirmPassword = this.userEdit.confirmPassword;\n      console.log(this.user);\n    }\n  },\n  created: function created() {\n    this.products1 = {\n      data: [{\n        id: '1000',\n        username: 'Jet Trader',\n        plan: 'Jet-Trader',\n        accountId: '1',\n        amount: '0',\n        dailyProfit: '0',\n        accumulatedGain: '0',\n        accumulatedEarnings: '0'\n      }]\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","data","editingRows","disabled","user","name","email","phone","password","confirmPassword","userDataMT4","tradeId","tradePassword","server","dropdownItems","code","dropdownItem","methods","onRowEditSave","event","newData","index","products2","getStatusLabel","status","handleSubmit","console","log","post","then","response","catch","error","toggleDisabled","handleChange","userEdit","created","products1","id","username","plan","accountId","amount","dailyProfit","accumulatedGain","accumulatedEarnings"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\PagesAdmin\\UsersAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"grid\">\r\n        <div class=\"col-12 md:col-12\">\r\n            <div class=\"card\">\r\n                <h5>Row Editing</h5>\r\n                <DataTable :value=\"products1.data\" editMode=\"row\" dataKey=\"id\" v-model:editingRows=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsiveLayout=\"scroll\">\r\n                    <Column field=\"username\" header=\"Name\" style=\"width: 20%\"> </Column>\r\n                    <Column field=\"plan\" header=\"Plan\" style=\"width: 20%\"> </Column>\r\n                    <Column field=\"amount\" header=\"Amount\" style=\"width: 20%\">\r\n                        <template #editor=\"{ data, field }\">\r\n                            <InputText v-model=\"data[field]\" />\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"dailyProfit\" header=\"Daily Profit\" style=\"width: 20%\">\r\n                        <template #editor=\"{ data, field }\">\r\n                            <InputText v-model=\"data[field]\" />\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"accumulatedGain\" header=\"Accumulated Gain\" style=\"width: 20%\">\r\n                        <template #editor=\"{ data, field }\">\r\n                            <InputText v-model=\"data[field]\" />\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"accumulatedEarnings\" header=\"Accumulated Earnings (Jet Trader)\" style=\"width: 20%\">\r\n                        <template #editor=\"{ data, field }\">\r\n                            <InputText v-model=\"data[field]\" />\r\n                        </template>\r\n                    </Column>\r\n                    <Column :rowEditor=\"true\" style=\"width: 10%; min-width: 8rem\" bodyStyle=\"text-align:center\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            editingRows: [],\r\n            data: null,\r\n            disabled: true,\r\n            user: {\r\n                name: 'Jet Trader',\r\n                email: 'exemplo@exemplo.com',\r\n                phone: '99 99999-9999',\r\n                password: 'adsadadasd',\r\n                confirmPassword: 'adsadadasd',\r\n            },\r\n            userDataMT4: {\r\n                name: '',\r\n                tradeId: '',\r\n                tradePassword: '',\r\n                server: '',\r\n            },\r\n            dropdownItems: [\r\n                { name: 'Option 1', code: 'Option 1' },\r\n                { name: 'Option 2', code: 'Option 2' },\r\n                { name: 'Option 3', code: 'Option 3' },\r\n            ],\r\n            dropdownItem: null,\r\n        };\r\n    },\r\n    methods: {\r\n        onRowEditSave(event) {\r\n            let { newData, index } = event;\r\n\r\n            this.products2[index] = newData;\r\n        },\r\n        getStatusLabel(status) {\r\n            switch (status) {\r\n                case 'INSTOCK':\r\n                    return 'In Stock';\r\n\r\n                case 'LOWSTOCK':\r\n                    return 'Low Stock';\r\n\r\n                case 'OUTOFSTOCK':\r\n                    return 'Out of Stock';\r\n\r\n                default:\r\n                    return 'NA';\r\n            }\r\n        },\r\n        handleSubmit() {\r\n            console.log(this.userDataMT4);\r\n            axios\r\n                .post('/api/submit', this.userDataMT4)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        toggleDisabled() {\r\n            this.disabled = !this.disabled;\r\n        },\r\n        handleChange() {\r\n            this.user.name = this.userEdit.name;\r\n            this.user.email = this.userEdit.email;\r\n            this.user.phone = this.userEdit.phone;\r\n            this.user.password = this.userEdit.password;\r\n            this.user.confirmPassword = this.userEdit.confirmPassword;\r\n            console.log(this.user);\r\n        },\r\n    },\r\n    created() {\r\n        this.products1 = {\r\n            data: [\r\n                {\r\n                    id: '1000',\r\n                    username: 'Jet Trader',\r\n                    plan: 'Jet-Trader',\r\n                    accountId: '1',\r\n                    amount: '0',\r\n                    dailyProfit: '0',\r\n                    accumulatedGain: '0',\r\n                    accumulatedEarnings: '0',\r\n                },\r\n            ],\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.product-badge.status-denied {\r\n    background: #ffcdd2;\r\n    color: #c63737;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    font-weight: 700;\r\n    padding-right: 22px;\r\n}\r\n\r\n.product-badge.status-approved {\r\n    background: #c8e6c9;\r\n    color: #256029;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    font-weight: 700;\r\n}\r\n\r\n.product-badge.status-pending {\r\n    background: #feedaf;\r\n    color: #8a5340;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    font-weight: 700;\r\n    padding-right: 16px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}