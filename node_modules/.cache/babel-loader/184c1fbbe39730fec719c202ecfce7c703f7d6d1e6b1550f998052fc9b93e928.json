{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Login = _resolveComponent(\"Login\");\n  var _component_Error = _resolveComponent(\"Error\");\n  var _component_Verification = _resolveComponent(\"Verification\");\n  var _component_TrueCheck = _resolveComponent(\"TrueCheck\");\n  var _component_Register = _resolveComponent(\"Register\");\n  var _component_Access = _resolveComponent(\"Access\");\n  var _component_NotFound = _resolveComponent(\"NotFound\");\n  var _component_App = _resolveComponent(\"App\");\n  return _ctx.$route.path === '/login' ? (_openBlock(), _createBlock(_component_Login, {\n    key: 0\n  })) : _ctx.$route.path === '/error' ? (_openBlock(), _createBlock(_component_Error, {\n    key: 1\n  })) : _ctx.$route.path === '/verification' ? (_openBlock(), _createBlock(_component_Verification, {\n    key: 2\n  })) : _ctx.$route.path === '/trueCheck' ? (_openBlock(), _createBlock(_component_TrueCheck, {\n    key: 3\n  })) : _ctx.$route.path === '/register' ? (_openBlock(), _createBlock(_component_Register, {\n    key: 4\n  })) : _ctx.$route.path === '/access' ? (_openBlock(), _createBlock(_component_Access, {\n    key: 5\n  })) : _ctx.$route.path === '/notfound' ? (_openBlock(), _createBlock(_component_NotFound, {\n    key: 6\n  })) : (_openBlock(), _createBlock(_component_App, {\n    key: 7,\n    theme: $data.theme,\n    colorScheme: $data.colorScheme,\n    componentTheme: $data.componentTheme,\n    onChangeColorScheme: $options.onChangeColorScheme,\n    onChangeComponentTheme: $options.onChangeComponentTheme,\n    onChangeMenuTheme: $options.onChangeMenuTheme\n  }, null, 8 /* PROPS */, [\"theme\", \"colorScheme\", \"componentTheme\", \"onChangeColorScheme\", \"onChangeComponentTheme\", \"onChangeMenuTheme\"]));\n}","map":{"version":3,"mappings":";;;;;;;;;;SACiBA,WAAM,CAACC,IAAI,+BAAxBC,aAAyCC;IAAAC;EAAA,MACvBJ,WAAM,CAACC,IAAI,+BAA7BC,aAA8CG;IAAAD;EAAA,MACrBJ,WAAM,CAACC,IAAI,sCAApCC,aAA4DI;IAAAF;EAAA,MACtCJ,WAAM,CAACC,IAAI,mCAAjCC,aAAsDK;IAAAH;EAAA,MACjCJ,WAAM,CAACC,IAAI,kCAAhCC,aAAoDM;IAAAJ;EAAA,MACjCJ,WAAM,CAACC,IAAI,gCAA9BC,aAAgDO;IAAAL;EAAA,MAC3BJ,WAAM,CAACC,IAAI,kCAAhCC,aAAoDQ;IAAAN;EAAA,qBACpDF,aACgJS;;IAD1IC,KAAK,EAAEC,WAAK;IAAGC,WAAW,EAAED,iBAAW;IAAGE,cAAc,EAAEF,oBAAc;IACzEG,mBAAmB,EAAEC,4BAAmB;IAAGC,sBAAsB,EAAED,+BAAsB;IAAGE,iBAAiB,EAAEF","names":["_ctx","path","_createBlock","_component_Login","key","_component_Error","_component_Verification","_component_TrueCheck","_component_Register","_component_Access","_component_NotFound","_component_App","theme","$data","colorScheme","componentTheme","onChangeColorScheme","$options","onChangeComponentTheme","onChangeMenuTheme"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppWrapper.vue"],"sourcesContent":["<template>\n    <Login v-if=\"$route.path === '/login'\" />\n    <Error v-else-if=\"$route.path === '/error'\" />\n    <Verification v-else-if=\"$route.path === '/verification'\" />\n    <TrueCheck v-else-if=\"$route.path === '/trueCheck'\" />\n    <Register v-else-if=\"$route.path === '/register'\" />\n    <Access v-else-if=\"$route.path === '/access'\" />\n    <NotFound v-else-if=\"$route.path === '/notfound'\" />\n    <App :theme=\"theme\" :colorScheme=\"colorScheme\" :componentTheme=\"componentTheme\"\n        @change-color-scheme=\"onChangeColorScheme\" @change-component-theme=\"onChangeComponentTheme\" @change-menu-theme=\"onChangeMenuTheme\" v-else />\n</template>\n\n<script>\n    import App from './App.vue';\n    import Error from './pages/Error';\n    import Access from './pages/Access';\n    import Login from './pages/Login';\n    import Verification from './pages/Verification';\n    import trueCheck from './pages/TrueCheck';\n    import Register from './pages/Register';\n    import NotFound from './pages/NotFound';\n\n\texport default {\n        data() {\n            return {\n                theme: 'blue',\n                componentTheme: 'blue',\n                colorScheme: 'dark',\n            }\n        },\n        methods: {\n            onChangeColorScheme(scheme) {\n                this.changeStyleSheetUrl('layout-css', 'layout-' + scheme + '.css', 1);\n                this.changeStyleSheetUrl('theme-css', 'theme-' + scheme + '.css', 1);\n                this.colorScheme = scheme;\n                this.$appState.colorScheme = scheme;\n            },\n            onChangeMenuTheme(theme) {\n                const layoutLink = document.getElementById('layout-css');\n                const href = 'layout/css/' + theme + '/layout-' + this.colorScheme + '.css';\n\n                this.replaceLink(layoutLink, href);\n                this.theme = theme;\n            },\n            onChangeComponentTheme(theme) {\n                const themeLink = document.getElementById('theme-css');\n                const href = 'theme/' + theme + '/theme-' + this.colorScheme + '.css';\n\n                this.replaceLink(themeLink, href);\n                this.componentTheme = theme;\n            },\n            changeStyleSheetUrl(id, value, from) {\n                const element = document.getElementById(id);\n                const urlTokens = element.getAttribute('href').split('/');\n\n                if (from === 1) {           // which function invoked this function - change scheme\n                    urlTokens[urlTokens.length - 1] = value;\n                } else if (from === 2) {       // which function invoked this function - change color\n                    urlTokens[urlTokens.length - 2] = value;\n                }\n\n                const newURL = urlTokens.join('/');\n\n                this.replaceLink(element, newURL);\n            },\n            replaceLink(linkElement, href,callback) {\n                const id = linkElement.getAttribute('id');\n                const cloneLinkElement = linkElement.cloneNode(true);\n\n                cloneLinkElement.setAttribute('href', href);\n                cloneLinkElement.setAttribute('id', id + '-clone');\n\n                linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\n\n                cloneLinkElement.addEventListener('load', () => {\n                    linkElement.remove();\n                    cloneLinkElement.setAttribute('id', id);\n\n                    if (callback) {\n                        callback();\n                    }\n                });\n            }\n        },\n        components: {\n            'App': App,\n            'Error': Error,\n            'Access': Access,\n            'Login': Login,\n            'Register': Register,\n            'NotFound': NotFound,\n            'Verification': Verification,\n            'trueCheck': trueCheck,\n        }\n\t}\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}