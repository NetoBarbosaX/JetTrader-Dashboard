{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"layout-breadcrumb-container\"\n};\nvar _hoisted_2 = {\n  class: \"layout-breadcrumb-left-items\"\n};\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-bars\"\n}, null, -1 /* HOISTED */);\nvar _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Breadcrumb = _resolveComponent(\"Breadcrumb\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$options.isStatic() ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    href: \"#\",\n    class: \"menu-button\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onMenuButtonClick($event);\n    })\n  }, _hoisted_4)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Breadcrumb, {\n    model: $data.items,\n    class: \"layout-breadcrumb\"\n  }, null, 8 /* PROPS */, [\"model\"])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAA6B;;EAC/BA,KAAK,EAAC;AAA8B;8BAEjCC,oBAA0B;EAAvBD,KAAK,EAAC;AAAY;kBAArBE,UAA0B;;;uBAHtCC,oBAQM,OARNC,UAQM,GAPFH,oBAMM,OANNI,UAMM,GALuEC,iBAAQ,oBAAjFH,oBAEI;;IAFDI,IAAI,EAAC,GAAG;IAACP,KAAK,EAAC,aAAa;IAAEQ,OAAK;MAAA,OAAEF,0BAAiB,CAACG,MAAM;IAAA;uDAIhEC,aAAkEC;IAArDC,KAAK,EAAEC,WAAK;IAAEb,KAAK,EAAC","names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_2","$options","href","onClick","$event","_createVNode","_component_Breadcrumb","model","$data"],"sourceRoot":"","sources":["C:\\Users\\eletr\\Desktop\\AtlantisVue\\src\\AppBreadcrumb.vue"],"sourcesContent":["<template>\n    <div class=\"layout-breadcrumb-container\">\n        <div class=\"layout-breadcrumb-left-items\">\n            <a href=\"#\" class=\"menu-button\" @click=\"onMenuButtonClick($event)\" v-if=\"isStatic()\">\n                <i class=\"pi pi-bars\"></i>\n            </a>\n\n            <Breadcrumb :model=\"items\" class=\"layout-breadcrumb\"></Breadcrumb>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        menuMode: String,\n        searchActive: {\n            type: Boolean,\n            default: false,\n        },\n        searchClick: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: ['menubutton-click', 'rightmenu-button-click', 'update:searchActive', 'update:searchClick'],\n    data() {\n        return {\n            items: [],\n            search: '',\n        };\n    },\n    watch: {\n        $route() {\n            this.watchRouter();\n        },\n    },\n    created() {\n        this.watchRouter();\n    },\n    methods: {\n        watchRouter() {\n            if (this.$router.currentRoute.value.meta.breadcrumb) {\n                this.items = [];\n                const bc = this.$router.currentRoute.value.meta.breadcrumb[0];\n                for (let pro in bc) {\n                    this.items.push({ label: bc[pro] });\n                }\n            }\n        },\n        onMenuButtonClick(event) {\n            this.$emit('menubutton-click', event);\n        },\n        onRightMenuButtonClick() {\n            this.$emit('rightmenu-button-click');\n        },\n        inputClick() {\n            this.$emit('update:searchClick', true);\n        },\n        breadcrumbClick() {\n            this.$emit('update:searchActive', true);\n            this.$emit('update:searchClick', true);\n        },\n        isStatic() {\n            return this.menuMode === 'static';\n        },\n    },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}